openapi: 3.0.0
info:
  title: E-commerce API
  version: 1.0.0
  description: API for managing orders, products, and categories.

paths:
  /orders:
    post:
      summary: Create a new order
      tags:
        - Order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ID of the user placing the order.
                email:
                  type: string
                  format: email
                  description: Email of the user for confirmation.
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      variant_id:
                        type: string
                        description: ID of the product variant.
                      quantity:
                        type: integer
                        description: Quantity of the product variant.
                      unit_price:
                        type: number
                        format: float
                        description: Unit price of the product variant.
                      product_name:
                        type: string
                        description: Name of the product.
                      product_sku:
                        type: string
                        description: SKU of the product.
                    required:
                      - variant_id
                      - quantity
                      - unit_price
                      - product_name
                      - product_sku
                shipping_address:
                  type: string # Hoặc một object chi tiết hơn
                  description: Shipping address for the order.
                billing_address:
                  type: string # Hoặc một object chi tiết hơn
                  description: Billing address for the order.
              required:
                - user_id
                - email
                - items
                - shipping_address
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: string
                    description: The ID of the created order.
                  status:
                    type: string
                    description: The status of the created order (e.g., CREATED).
        '400':
          description: Bad Request (e.g., insufficient stock, validation error)
        '404':
          description: Not Found (e.g., product variant not found)

  /orders/pay/{orderId}:
    post:
      summary: Simulate payment for an order
      tags:
        - Order
      parameters:
        - name: orderId
          in: path
          required: true
          description: ID of the order to simulate payment for
          schema:
            type: string
      responses:
        '200':
          description: Payment simulated successfully
          content:
            application/json:
              schema:
                # Dựa trên order.service.js, hàm simulatePayment trả về toàn bộ object order
                # Bạn cần định nghĩa chi tiết schema cho Order ở đây hoặc tham chiếu đến nó
                type: object
                properties:
                  id:
                    type: string
                  order_number:
                    type: string
                  user_id:
                    type: string
                  subtotal:
                    type: number
                  shipping_fee:
                    type: number
                  total_amount:
                    type: number
                  shipping_address:
                    type: string
                  billing_address:
                    type: string
                  payment_method:
                    type: string
                  payment_status:
                    type: string
                    enum: [PENDING, PAID, FAILED]
                  order_status:
                    type: string
                    enum: [PROCESSING, CONFIRMED, PENDING, SHIPPED, DELIVERED, CANCELED]
                  payment_reference:
                    type: string
                  order_items:
                    type: array
                    items:
                      type: object
                      properties:
                        product_variant_id:
                          type: string
                        product_name:
                          type: string
                        product_sku:
                          type: string
                        quantity:
                          type: integer
                        unit_price:
                          type: number
                        total_price:
                          type: number
        '404':
          description: Order not found or already paid

  /orders/confirm/{orderId}:
    get:
      summary: Confirm an order (Mark as awaiting payment)
      tags:
        - Order
      parameters:
        - name: orderId
          in: path
          required: true
          description: ID of the order to confirm
          schema:
            type: string
      responses:
        '200':
          description: Order confirmed and awaiting payment
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: string
                  status:
                    type: string
                    example: CONFIRMED_AWAITING_PAYMENT
        '404':
          description: Order not found
        '400':
          description: Order already confirmed or processed

  /products/category:
    post:
      summary: Get products by categories
      tags:
        - Product
      requestBody: # Nếu vẫn dùng GET với body (không khuyến khích)
        description: Category IDs to filter products by.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                categoryIds:
                  type: array
                  items:
                    type: string
                  description: Array of category IDs.
      responses:
        '200':
          description: Successfully retrieved products
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object # Định nghĩa schema cho Product ở đây
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        # ... các thuộc tính khác của product
        '400':
          description: Invalid input for category IDs

  /products/filter:
    get:
      summary: Filter products based on various criteria
      tags:
        - Product
      parameters:
        - name: categoryIds
          in: query
          description: Comma-separated list of category IDs
          required: false
          schema:
            type: string
        - name: attributeValueIds
          in: query
          description: Comma-separated list of attribute value IDs
          required: false
          schema:
            type: string
        - name: minPrice
          in: query
          description: Minimum price
          required: false
          schema:
            type: number
            format: float
        - name: maxPrice
          in: query
          description: Maximum price
          required: false
          schema:
            type: number
            format: float
      responses:
        '200':
          description: Successfully retrieved filtered products
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object # Định nghĩa schema cho Product ở đây
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        # ... các thuộc tính khác của product

  /products/attribute:
    get:
      summary: Get available filters (attributes) for products, optionally filtered by categories
      tags:
        - Product
      parameters:
        - name: category_ids
          in: query
          description: Comma-separated list of category IDs to get available filters for
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved available filters
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object # Định nghĩa schema cho Filters ở đây
                    # Ví dụ:
                    # properties:
                    #   colors:
                    #     type: array
                    #     items:
                    #       type: string
                    #   sizes:
                    #     type: array
                    #     items:
                    #       type: string

  /categories: # Giả định route cho categories
    get:
      summary: Get all categories
      tags:
        - Category
      responses:
        '200':
          description: Successfully retrieved all categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object # Định nghĩa schema cho Category ở đây
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        # ... các thuộc tính khác của category

components:
  schemas:
    OrderItem:
      type: object
      properties:
        product_variant_id:
          type: string
        product_name:
          type: string
        # ...
    Product:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        # ...
    Category:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        # ...

tags:
  - name: Order
    description: Operations related to orders
  - name: Product
    description: Operations related to products
  - name: Category
    description: Operations related to categories